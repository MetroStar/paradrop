# Redirect HTTP to HTTPS
# server {
#   listen 80;
#   server_name localhost 127.0.0.1;

#   return 301 https://$host$request_uri;
# }

server {
  # Enable QUIC and HTTP/3.
  listen 8443 quic;
  # Ensure that HTTP/2 is enabled for the server
  listen 8443 ssl http2;
  server_name localhost 127.0.0.1;

  http2_push_preload on;

  gzip on;
  gzip_http_version 1.1;
  gzip_vary on;
  gzip_comp_level 6;
  gzip_proxied any;
  gzip_types
    application/atom+xml
    application/geo+json
    application/javascript
    application/x-javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rdf+xml
    application/rss+xml
    application/vnd.ms-fontobject
    application/wasm
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/eot
    font/otf
    font/ttf
    image/bmp
    image/svg+xml
    image/vnd.microsoft.icon
    image/x-icon
    text/cache-manifest
    text/calendar
    text/css
    text/javascript
    text/markdown
    text/plain
    text/xml
    text/vcard
    text/vnd.rim.location.xloc
    text/vtt
    text/x-component
    text/x-cross-domain-policy;

  brotli_static on;
  brotli on;
  brotli_types
    application/atom+xml
    application/geo+json
    application/javascript
    application/x-javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rdf+xml
    application/rss+xml
    application/vnd.ms-fontobject
    application/wasm
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/eot
    font/otf
    font/ttf
    image/bmp
    image/svg+xml
    image/vnd.microsoft.icon
    image/x-icon
    text/cache-manifest
    text/calendar
    text/css
    text/javascript
    text/markdown
    text/plain
    text/xml
    text/vcard
    text/vnd.rim.location.xloc
    text/vtt
    text/x-component
    text/x-cross-domain-policy;
  brotli_comp_level 4;

  # Enable TLS versions (TLSv1.3 is required for QUIC).
  ssl_protocols TLSv1.2 TLSv1.3;

  ssl_certificate /etc/ssl/localhost.pem;
  ssl_certificate_key /etc/ssl/private/localhost.key;

  ssl_session_cache shared:SSL:1m;
  ssl_session_timeout 5m;

  # Enable TLSv1.3's 0-RTT. Use $ssl_early_data when reverse proxying to
  # prevent replay attacks.
  #
  # @see: http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_early_data
  ssl_early_data on;
  ssl_ciphers HIGH:!aNULL:!MD5;
  ssl_prefer_server_ciphers on;

  # Add Alt-Svc header to negotiate HTTP/3.
  add_header alt-svc 'h3-29=":443"; ma=86400, h3=":443"; ma=86400';
  # Debug 0-RTT.
  add_header X-Early-Data $tls1_3_early_data;

  # Security headers
  add_header X-Frame-Options "deny";
  add_header Strict-Transport-Security "max-age=31536000" always;
  add_header X-XSS-Protection "1; mode=block";
  add_header X-Content-Type-Options "nosniff";

  # Deny private files
  location ~* (?:#.*#|\.(?:bak|conf|dist|fla|in[ci]|log|orig|git|gitignore|py|ignore|dockerignore|psd|sh|sql|sw[op])|~)$ {
    deny all;
    access_log off;
    log_not_found off;
  }

  # Robots.txt route
  location /robots.txt {
    add_header Content-Type text/plain;
    return 200 "User-agent: *\nDisallow: /\n";
  }

  # Opensearch Dashboards route
  location /opensearch_dashboards {
    client_max_body_size 100M;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection "Keep-Alive";
    proxy_set_header Proxy-Connection "Keep-Alive";
    resolver         127.0.0.11;
    proxy_pass       http://opensearch_dashboards:5601/opensearch_dashboards;
  }

  # API route
  location /v1 {
    client_max_body_size 100M;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection "Keep-Alive";
    proxy_set_header Proxy-Connection "Keep-Alive";
    proxy_set_header Cookie $http_cookie;
    resolver         127.0.0.11;
    proxy_pass       https://paradrop_api:5000/$request_uri;
  }

  # Swagger apidocs route
  location ~ ^/(apidocs|flasgger_static|apispec_[0-9].json) {
    client_max_body_size 100M;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection "Keep-Alive";
    proxy_set_header Proxy-Connection "Keep-Alive";
    resolver         127.0.0.11;
    proxy_pass       https://paradrop_api:5000/$request_uri;
  }

  # Docs route
  location /docs {
    client_max_body_size 10M;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection "Keep-Alive";
    proxy_set_header Proxy-Connection "Keep-Alive";
    proxy_set_header Cookie $http_cookie;
    resolver         127.0.0.11;
    proxy_pass       http://paradrop_docs:3008/docs/;
  }

  # UI route
  location /ui {
    client_max_body_size 100M;
    alias /usr/share/nginx/html;
    index index.html;
  }

  # Redirect / to /ui
  location / {
    return 301 /ui;
  }

}

map $ssl_early_data $tls1_3_early_data {
  "~." $ssl_early_data;
  default "";
}
